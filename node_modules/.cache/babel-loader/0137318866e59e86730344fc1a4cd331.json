{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useReducer } from \"react\";\nexport function useTodos(initialTodos) {\n  _s();\n\n  const [todos, dispatch] = useReducer((state, action) => {\n    switch (action.type) {\n      case \"ADD\":\n        return [...state, {\n          id: state.length,\n          text: action.text,\n          done: false\n        }];\n\n      case \"REMOVE\":\n        return state.filter(({\n          id\n        }) => id !== action.id);\n\n      default:\n        throw new Error();\n    }\n  }, initialTodos);\n  const addTodo = useCallback(text => {\n    dispatch({\n      type: \"ADD\",\n      text\n    });\n  }, []);\n  const removeTodo = useCallback(id => {\n    dispatch({\n      type: \"REMOVE\",\n      id\n    });\n  }, []);\n  return {\n    todos,\n    addTodo,\n    removeTodo\n  };\n}\n\n_s(useTodos, \"5l5Qi7A25/IILfYNHMseGevg/Hk=\");","map":{"version":3,"sources":["/home/ahtisham/Desktop/No-bsts-with-reactjs/src/useTodos.ts"],"names":["useCallback","useReducer","useTodos","initialTodos","todos","dispatch","state","action","type","id","length","text","done","filter","Error","addTodo","removeTodo"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,UAAtB,QAAwC,OAAxC;AAYA,OAAO,SAASC,QAAT,CAAkBC,YAAlB,EAIL;AAAA;;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,UAAU,CAAC,CAACK,KAAD,EAAgBC,MAAhB,KAAuC;AAC1E,YAAQA,MAAM,CAACC,IAAf;AACE,WAAK,KAAL;AACE,eAAO,CACL,GAAGF,KADE,EAEL;AACEG,UAAAA,EAAE,EAAEH,KAAK,CAACI,MADZ;AAEEC,UAAAA,IAAI,EAAEJ,MAAM,CAACI,IAFf;AAGEC,UAAAA,IAAI,EAAE;AAHR,SAFK,CAAP;;AAQF,WAAK,QAAL;AACE,eAAON,KAAK,CAACO,MAAN,CAAa,CAAC;AAAEJ,UAAAA;AAAF,SAAD,KAAYA,EAAE,KAAKF,MAAM,CAACE,EAAvC,CAAP;;AACF;AACE,cAAM,IAAIK,KAAJ,EAAN;AAbJ;AAeD,GAhBmC,EAgBjCX,YAhBiC,CAApC;AAkBA,QAAMY,OAAO,GAAGf,WAAW,CAAEW,IAAD,IAAkB;AAC5CN,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,KADC;AAEPG,MAAAA;AAFO,KAAD,CAAR;AAID,GAL0B,EAKxB,EALwB,CAA3B;AAOA,QAAMK,UAAU,GAAGhB,WAAW,CAAES,EAAD,IAAgB;AAC7CJ,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,QADC;AAEPC,MAAAA;AAFO,KAAD,CAAR;AAID,GAL6B,EAK3B,EAL2B,CAA9B;AAOA,SAAO;AAAEL,IAAAA,KAAF;AAASW,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,GAAP;AACD;;GAtCed,Q","sourcesContent":["import { useCallback, useReducer } from \"react\";\n\ntype ActionType =\n  | { type: \"ADD\"; text: string }\n  | { type: \"REMOVE\"; id: number };\n\ninterface Todo {\n  id: number;\n  done: boolean;\n  text: string;\n}\n\nexport function useTodos(initialTodos: Todo[]): {\n  todos: Todo[];\n  addTodo: (text: string) => void;\n  removeTodo: (id: number) => void;\n} {\n  const [todos, dispatch] = useReducer((state: Todo[], action: ActionType) => {\n    switch (action.type) {\n      case \"ADD\":\n        return [\n          ...state,\n          {\n            id: state.length,\n            text: action.text,\n            done: false,\n          },\n        ];\n      case \"REMOVE\":\n        return state.filter(({ id }) => id !== action.id);\n      default:\n        throw new Error();\n    }\n  }, initialTodos);\n\n  const addTodo = useCallback((text: string) => {\n    dispatch({\n      type: \"ADD\",\n      text,\n    });\n  }, []);\n\n  const removeTodo = useCallback((id: number) => {\n    dispatch({\n      type: \"REMOVE\",\n      id,\n    });\n  }, []);\n\n  return { todos, addTodo, removeTodo };\n}\n"]},"metadata":{},"sourceType":"module"}