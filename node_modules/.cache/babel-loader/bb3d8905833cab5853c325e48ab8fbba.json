{"ast":null,"code":"var _jsxFileName = \"/home/ahtisham/Desktop/No-bsts-with-reactjs/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useRef } from \"react\";\nimport { useTodos } from \"./useTodos\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Heading = ({\n  title\n}) => /*#__PURE__*/_jsxDEV(\"h2\", {\n  children: title\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 51\n}, this);\n\n_c = Heading;\n\nconst Box = ({\n  children\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: {\n    padding: \"1rem\",\n    fontWeight: \"bold\"\n  },\n  children: children\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this);\n\n_c2 = Box;\n\nconst Button = ({\n  title,\n  children,\n  style,\n  ...rest\n}) => /*#__PURE__*/_jsxDEV(\"button\", { ...rest,\n  style: { ...style,\n    backgroundColor: \"red\",\n    color: \"white\",\n    fontSize: \"xx-large\"\n  },\n  children: title !== null && title !== void 0 ? title : children\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 26,\n  columnNumber: 3\n}, this);\n\n_c3 = Button;\n\nfunction UL({\n  items,\n  render,\n  itemClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: items.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      onClick: () => itemClick(item),\n      children: render(item)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_c4 = UL;\n\nfunction App() {\n  _s();\n\n  const {\n    todos,\n    addTodo,\n    removeTodo\n  } = useTodos([{\n    id: 0,\n    text: \"Hey there\",\n    done: false\n  }]);\n  const newTodoRef = useRef(null);\n  const onAddTodo = useCallback(() => {\n    if (newTodoRef.current) {\n      addTodo(newTodoRef.current.value);\n      newTodoRef.current.value = \"\";\n    }\n  }, [addTodo]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      title: \"Introduction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: \"Hello there\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Heading, {\n      title: \"Todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UL, {\n      items: todos,\n      itemClick: item => alert(item.id),\n      render: todo => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [todo.text, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeTodo(todo.id),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ref: newTodoRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onAddTodo,\n        children: \"Add Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Yu2zgr9s4WQ2MjF0S8iijzOeSt0=\", false, function () {\n  return [useTodos];\n});\n\n_c5 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Heading\");\n$RefreshReg$(_c2, \"Box\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"UL\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"sources":["/home/ahtisham/Desktop/No-bsts-with-reactjs/src/App.tsx"],"names":["React","useCallback","useRef","useTodos","Heading","title","Box","children","padding","fontWeight","Button","style","rest","backgroundColor","color","fontSize","UL","items","render","itemClick","map","item","index","App","todos","addTodo","removeTodo","id","text","done","newTodoRef","onAddTodo","current","value","alert","todo"],"mappings":"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","sourcesContent":["import React, { useCallback, useRef } from \"react\";\nimport { useTodos } from \"./useTodos\";\nimport \"./App.css\";\n\nconst Heading = ({ title }: { title: string }) => <h2>{title}</h2>;\n\nconst Box: React.FunctionComponent = ({ children }) => (\n  <div\n    style={{\n      padding: \"1rem\",\n      fontWeight: \"bold\",\n    }}\n  >\n    {children}\n  </div>\n);\n\nconst Button: React.FunctionComponent<\n  React.DetailedHTMLProps<\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n  > & {\n    title?: string;\n  }\n> = ({ title, children, style, ...rest }) => (\n  <button\n    {...rest}\n    style={{\n      ...style,\n      backgroundColor: \"red\",\n      color: \"white\",\n      fontSize: \"xx-large\",\n    }}\n  >\n    {title ?? children}\n  </button>\n);\n\nfunction UL<T>({\n  items,\n  render,\n  itemClick,\n}: React.DetailedHTMLProps<\n  React.HTMLAttributes<HTMLUListElement>,\n  HTMLUListElement\n> & {\n  items: T[];\n  render: (item: T) => React.ReactNode;\n  itemClick: (item: T) => void;\n}) {\n  return (\n    <ul>\n      {items.map((item, index) => (\n        <li onClick={() => itemClick(item)} key={index}>\n          {render(item)}\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nfunction App() {\n  const { todos, addTodo, removeTodo } = useTodos([\n    { id: 0, text: \"Hey there\", done: false },\n  ]);\n\n  const newTodoRef = useRef<HTMLInputElement>(null);\n\n  const onAddTodo = useCallback(() => {\n    if (newTodoRef.current) {\n      addTodo(newTodoRef.current.value);\n      newTodoRef.current.value = \"\";\n    }\n  }, [addTodo]);\n\n  return (\n    <div>\n      <Heading title=\"Introduction\" />\n      <Box>Hello there</Box>\n\n      <Heading title=\"Todos\" />\n      <UL\n        items={todos}\n        itemClick={(item) => alert(item.id)}\n        render={(todo) => (\n          <>\n            {todo.text}\n            <button onClick={() => removeTodo(todo.id)}>Remove</button>\n          </>\n        )}\n      />\n      <div>\n        <input type=\"text\" ref={newTodoRef} />\n        <Button onClick={onAddTodo}>Add Todo</Button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}